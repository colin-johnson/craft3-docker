<?php
/**
 * CloudPosContractBaseClassesCheckDTOItemWithKitchenStatus
 *
 * PHP version 5
 *
 * @category Class
 * @package  QsrAutomations\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * QSR Automations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace QsrAutomations\Api\Model;

use \ArrayAccess;

/**
 * CloudPosContractBaseClassesCheckDTOItemWithKitchenStatus Class Doc Comment
 *
 * @category    Class
 * @package     QsrAutomations\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CloudPosContractBaseClassesCheckDTOItemWithKitchenStatus implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'CloudPos.Contract.BaseClasses.Check.DTO.ItemWithKitchenStatus';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'pos_item_number' => 'int',
        'pos_quantity' => 'int',
        'kitchen_status' => '\QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOKitchenStatus',
        'alternate_description' => 'string',
        'should_always_follow_parent' => 'bool',
        'category' => 'int',
        'cook_time_modifier_type' => 'string',
        'cook_time_modifier_value' => 'int',
        'department' => 'int',
        'description' => 'string',
        'destination_id' => 'int',
        'is_free_item' => 'bool',
        'ideal_cook_times' => 'int[]',
        'item_id' => 'int',
        'item_number' => 'int',
        'item_trait' => 'string',
        'item_type' => 'string',
        'modifiers' => '\QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOModifier[]',
        'new_time' => 'int',
        'new_time_percent' => 'int',
        'parent_item_number' => 'int',
        'plate_time' => 'int',
        'printer_description' => 'string',
        'priority_time' => 'int',
        'priority_time_percent' => 'int',
        'priority_value' => 'int',
        'quantity' => 'int',
        'routing_category' => 'int',
        'rush_time' => 'int',
        'rush_time_percent' => 'int',
        'seat' => 'int',
        'unit_price' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'pos_item_number' => 'int32',
        'pos_quantity' => 'int32',
        'kitchen_status' => null,
        'alternate_description' => null,
        'should_always_follow_parent' => null,
        'category' => 'int64',
        'cook_time_modifier_type' => null,
        'cook_time_modifier_value' => 'int32',
        'department' => 'int64',
        'description' => null,
        'destination_id' => 'int32',
        'is_free_item' => null,
        'ideal_cook_times' => 'int32',
        'item_id' => 'int64',
        'item_number' => 'int64',
        'item_trait' => null,
        'item_type' => null,
        'modifiers' => null,
        'new_time' => 'int32',
        'new_time_percent' => 'int32',
        'parent_item_number' => 'int64',
        'plate_time' => 'int32',
        'printer_description' => null,
        'priority_time' => 'int32',
        'priority_time_percent' => 'int32',
        'priority_value' => 'int32',
        'quantity' => 'int32',
        'routing_category' => 'int64',
        'rush_time' => 'int32',
        'rush_time_percent' => 'int32',
        'seat' => 'int32',
        'unit_price' => 'int32'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'pos_item_number' => 'PosItemNumber',
        'pos_quantity' => 'PosQuantity',
        'kitchen_status' => 'KitchenStatus',
        'alternate_description' => 'AlternateDescription',
        'should_always_follow_parent' => 'ShouldAlwaysFollowParent',
        'category' => 'Category',
        'cook_time_modifier_type' => 'CookTimeModifierType',
        'cook_time_modifier_value' => 'CookTimeModifierValue',
        'department' => 'Department',
        'description' => 'Description',
        'destination_id' => 'DestinationID',
        'is_free_item' => 'IsFreeItem',
        'ideal_cook_times' => 'IdealCookTimes',
        'item_id' => 'ItemID',
        'item_number' => 'ItemNumber',
        'item_trait' => 'ItemTrait',
        'item_type' => 'ItemType',
        'modifiers' => 'Modifiers',
        'new_time' => 'NewTime',
        'new_time_percent' => 'NewTimePercent',
        'parent_item_number' => 'ParentItemNumber',
        'plate_time' => 'PlateTime',
        'printer_description' => 'PrinterDescription',
        'priority_time' => 'PriorityTime',
        'priority_time_percent' => 'PriorityTimePercent',
        'priority_value' => 'PriorityValue',
        'quantity' => 'Quantity',
        'routing_category' => 'RoutingCategory',
        'rush_time' => 'RushTime',
        'rush_time_percent' => 'RushTimePercent',
        'seat' => 'Seat',
        'unit_price' => 'UnitPrice'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'pos_item_number' => 'setPosItemNumber',
        'pos_quantity' => 'setPosQuantity',
        'kitchen_status' => 'setKitchenStatus',
        'alternate_description' => 'setAlternateDescription',
        'should_always_follow_parent' => 'setShouldAlwaysFollowParent',
        'category' => 'setCategory',
        'cook_time_modifier_type' => 'setCookTimeModifierType',
        'cook_time_modifier_value' => 'setCookTimeModifierValue',
        'department' => 'setDepartment',
        'description' => 'setDescription',
        'destination_id' => 'setDestinationId',
        'is_free_item' => 'setIsFreeItem',
        'ideal_cook_times' => 'setIdealCookTimes',
        'item_id' => 'setItemId',
        'item_number' => 'setItemNumber',
        'item_trait' => 'setItemTrait',
        'item_type' => 'setItemType',
        'modifiers' => 'setModifiers',
        'new_time' => 'setNewTime',
        'new_time_percent' => 'setNewTimePercent',
        'parent_item_number' => 'setParentItemNumber',
        'plate_time' => 'setPlateTime',
        'printer_description' => 'setPrinterDescription',
        'priority_time' => 'setPriorityTime',
        'priority_time_percent' => 'setPriorityTimePercent',
        'priority_value' => 'setPriorityValue',
        'quantity' => 'setQuantity',
        'routing_category' => 'setRoutingCategory',
        'rush_time' => 'setRushTime',
        'rush_time_percent' => 'setRushTimePercent',
        'seat' => 'setSeat',
        'unit_price' => 'setUnitPrice'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'pos_item_number' => 'getPosItemNumber',
        'pos_quantity' => 'getPosQuantity',
        'kitchen_status' => 'getKitchenStatus',
        'alternate_description' => 'getAlternateDescription',
        'should_always_follow_parent' => 'getShouldAlwaysFollowParent',
        'category' => 'getCategory',
        'cook_time_modifier_type' => 'getCookTimeModifierType',
        'cook_time_modifier_value' => 'getCookTimeModifierValue',
        'department' => 'getDepartment',
        'description' => 'getDescription',
        'destination_id' => 'getDestinationId',
        'is_free_item' => 'getIsFreeItem',
        'ideal_cook_times' => 'getIdealCookTimes',
        'item_id' => 'getItemId',
        'item_number' => 'getItemNumber',
        'item_trait' => 'getItemTrait',
        'item_type' => 'getItemType',
        'modifiers' => 'getModifiers',
        'new_time' => 'getNewTime',
        'new_time_percent' => 'getNewTimePercent',
        'parent_item_number' => 'getParentItemNumber',
        'plate_time' => 'getPlateTime',
        'printer_description' => 'getPrinterDescription',
        'priority_time' => 'getPriorityTime',
        'priority_time_percent' => 'getPriorityTimePercent',
        'priority_value' => 'getPriorityValue',
        'quantity' => 'getQuantity',
        'routing_category' => 'getRoutingCategory',
        'rush_time' => 'getRushTime',
        'rush_time_percent' => 'getRushTimePercent',
        'seat' => 'getSeat',
        'unit_price' => 'getUnitPrice'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const COOK_TIME_MODIFIER_TYPE_NO_MODIFICATION = 'NoModification';
    const COOK_TIME_MODIFIER_TYPE_PERCENTAGE = 'Percentage';
    const COOK_TIME_MODIFIER_TYPE_VALUE = 'Value';
    const COOK_TIME_MODIFIER_TYPE_OVERRIDE = 'Override';
    const ITEM_TRAIT_NORMAL_ITEM = 'NormalItem';
    const ITEM_TRAIT_ADD_ITEM = 'AddItem';
    const ITEM_TRAIT_CUT_ITEM = 'CutItem';
    const ITEM_TRAIT_SUBSTITUTE_ITEM = 'SubstituteItem';
    const ITEM_TYPE_FOOD_ITEM = 'FoodItem';
    const ITEM_TYPE_COMBO_ITEM = 'ComboItem';
    const ITEM_TYPE_PIECE_DETAIL = 'PieceDetail';
    const ITEM_TYPE_MIXED_ITEM = 'MixedItem';
    const ITEM_TYPE_SIDE_ITEM = 'SideItem';
    const ITEM_TYPE_CONDIMENT = 'Condiment';
    const ITEM_TYPE_PIZZA_SECTION = 'PizzaSection';
    const ITEM_TYPE_PREP_MODIFIER = 'PrepModifier';
    const ITEM_TYPE_ALLERGEN = 'Allergen';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getCookTimeModifierTypeAllowableValues()
    {
        return [
            self::COOK_TIME_MODIFIER_TYPE_NO_MODIFICATION,
            self::COOK_TIME_MODIFIER_TYPE_PERCENTAGE,
            self::COOK_TIME_MODIFIER_TYPE_VALUE,
            self::COOK_TIME_MODIFIER_TYPE_OVERRIDE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getItemTraitAllowableValues()
    {
        return [
            self::ITEM_TRAIT_NORMAL_ITEM,
            self::ITEM_TRAIT_ADD_ITEM,
            self::ITEM_TRAIT_CUT_ITEM,
            self::ITEM_TRAIT_SUBSTITUTE_ITEM,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getItemTypeAllowableValues()
    {
        return [
            self::ITEM_TYPE_FOOD_ITEM,
            self::ITEM_TYPE_COMBO_ITEM,
            self::ITEM_TYPE_PIECE_DETAIL,
            self::ITEM_TYPE_MIXED_ITEM,
            self::ITEM_TYPE_SIDE_ITEM,
            self::ITEM_TYPE_CONDIMENT,
            self::ITEM_TYPE_PIZZA_SECTION,
            self::ITEM_TYPE_PREP_MODIFIER,
            self::ITEM_TYPE_ALLERGEN,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['pos_item_number'] = isset($data['pos_item_number']) ? $data['pos_item_number'] : null;
        $this->container['pos_quantity'] = isset($data['pos_quantity']) ? $data['pos_quantity'] : null;
        $this->container['kitchen_status'] = isset($data['kitchen_status']) ? $data['kitchen_status'] : null;
        $this->container['alternate_description'] = isset($data['alternate_description']) ? $data['alternate_description'] : null;
        $this->container['should_always_follow_parent'] = isset($data['should_always_follow_parent']) ? $data['should_always_follow_parent'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['cook_time_modifier_type'] = isset($data['cook_time_modifier_type']) ? $data['cook_time_modifier_type'] : null;
        $this->container['cook_time_modifier_value'] = isset($data['cook_time_modifier_value']) ? $data['cook_time_modifier_value'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['destination_id'] = isset($data['destination_id']) ? $data['destination_id'] : null;
        $this->container['is_free_item'] = isset($data['is_free_item']) ? $data['is_free_item'] : null;
        $this->container['ideal_cook_times'] = isset($data['ideal_cook_times']) ? $data['ideal_cook_times'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['item_trait'] = isset($data['item_trait']) ? $data['item_trait'] : null;
        $this->container['item_type'] = isset($data['item_type']) ? $data['item_type'] : null;
        $this->container['modifiers'] = isset($data['modifiers']) ? $data['modifiers'] : null;
        $this->container['new_time'] = isset($data['new_time']) ? $data['new_time'] : null;
        $this->container['new_time_percent'] = isset($data['new_time_percent']) ? $data['new_time_percent'] : null;
        $this->container['parent_item_number'] = isset($data['parent_item_number']) ? $data['parent_item_number'] : null;
        $this->container['plate_time'] = isset($data['plate_time']) ? $data['plate_time'] : null;
        $this->container['printer_description'] = isset($data['printer_description']) ? $data['printer_description'] : null;
        $this->container['priority_time'] = isset($data['priority_time']) ? $data['priority_time'] : null;
        $this->container['priority_time_percent'] = isset($data['priority_time_percent']) ? $data['priority_time_percent'] : null;
        $this->container['priority_value'] = isset($data['priority_value']) ? $data['priority_value'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['routing_category'] = isset($data['routing_category']) ? $data['routing_category'] : null;
        $this->container['rush_time'] = isset($data['rush_time']) ? $data['rush_time'] : null;
        $this->container['rush_time_percent'] = isset($data['rush_time_percent']) ? $data['rush_time_percent'] : null;
        $this->container['seat'] = isset($data['seat']) ? $data['seat'] : null;
        $this->container['unit_price'] = isset($data['unit_price']) ? $data['unit_price'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        $allowed_values = $this->getCookTimeModifierTypeAllowableValues();
        if (!in_array($this->container['cook_time_modifier_type'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'cook_time_modifier_type', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        $allowed_values = $this->getItemTraitAllowableValues();
        if (!in_array($this->container['item_trait'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'item_trait', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        $allowed_values = $this->getItemTypeAllowableValues();
        if (!in_array($this->container['item_type'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'item_type', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        $allowed_values = $this->getCookTimeModifierTypeAllowableValues();
        if (!in_array($this->container['cook_time_modifier_type'], $allowed_values)) {
            return false;
        }
        $allowed_values = $this->getItemTraitAllowableValues();
        if (!in_array($this->container['item_trait'], $allowed_values)) {
            return false;
        }
        $allowed_values = $this->getItemTypeAllowableValues();
        if (!in_array($this->container['item_type'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets pos_item_number
     * @return int
     */
    public function getPosItemNumber()
    {
        return $this->container['pos_item_number'];
    }

    /**
     * Sets pos_item_number
     * @param int $pos_item_number
     * @return $this
     */
    public function setPosItemNumber($pos_item_number)
    {
        $this->container['pos_item_number'] = $pos_item_number;

        return $this;
    }

    /**
     * Gets pos_quantity
     * @return int
     */
    public function getPosQuantity()
    {
        return $this->container['pos_quantity'];
    }

    /**
     * Sets pos_quantity
     * @param int $pos_quantity
     * @return $this
     */
    public function setPosQuantity($pos_quantity)
    {
        $this->container['pos_quantity'] = $pos_quantity;

        return $this;
    }

    /**
     * Gets kitchen_status
     * @return \QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOKitchenStatus
     */
    public function getKitchenStatus()
    {
        return $this->container['kitchen_status'];
    }

    /**
     * Sets kitchen_status
     * @param \QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOKitchenStatus $kitchen_status
     * @return $this
     */
    public function setKitchenStatus($kitchen_status)
    {
        $this->container['kitchen_status'] = $kitchen_status;

        return $this;
    }

    /**
     * Gets alternate_description
     * @return string
     */
    public function getAlternateDescription()
    {
        return $this->container['alternate_description'];
    }

    /**
     * Sets alternate_description
     * @param string $alternate_description
     * @return $this
     */
    public function setAlternateDescription($alternate_description)
    {
        $this->container['alternate_description'] = $alternate_description;

        return $this;
    }

    /**
     * Gets should_always_follow_parent
     * @return bool
     */
    public function getShouldAlwaysFollowParent()
    {
        return $this->container['should_always_follow_parent'];
    }

    /**
     * Sets should_always_follow_parent
     * @param bool $should_always_follow_parent
     * @return $this
     */
    public function setShouldAlwaysFollowParent($should_always_follow_parent)
    {
        $this->container['should_always_follow_parent'] = $should_always_follow_parent;

        return $this;
    }

    /**
     * Gets category
     * @return int
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     * @param int $category
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets cook_time_modifier_type
     * @return string
     */
    public function getCookTimeModifierType()
    {
        return $this->container['cook_time_modifier_type'];
    }

    /**
     * Sets cook_time_modifier_type
     * @param string $cook_time_modifier_type
     * @return $this
     */
    public function setCookTimeModifierType($cook_time_modifier_type)
    {
        $allowed_values = $this->getCookTimeModifierTypeAllowableValues();
        if (!is_null($cook_time_modifier_type) && !in_array($cook_time_modifier_type, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cook_time_modifier_type', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['cook_time_modifier_type'] = $cook_time_modifier_type;

        return $this;
    }

    /**
     * Gets cook_time_modifier_value
     * @return int
     */
    public function getCookTimeModifierValue()
    {
        return $this->container['cook_time_modifier_value'];
    }

    /**
     * Sets cook_time_modifier_value
     * @param int $cook_time_modifier_value
     * @return $this
     */
    public function setCookTimeModifierValue($cook_time_modifier_value)
    {
        $this->container['cook_time_modifier_value'] = $cook_time_modifier_value;

        return $this;
    }

    /**
     * Gets department
     * @return int
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     * @param int $department
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets destination_id
     * @return int
     */
    public function getDestinationId()
    {
        return $this->container['destination_id'];
    }

    /**
     * Sets destination_id
     * @param int $destination_id
     * @return $this
     */
    public function setDestinationId($destination_id)
    {
        $this->container['destination_id'] = $destination_id;

        return $this;
    }

    /**
     * Gets is_free_item
     * @return bool
     */
    public function getIsFreeItem()
    {
        return $this->container['is_free_item'];
    }

    /**
     * Sets is_free_item
     * @param bool $is_free_item
     * @return $this
     */
    public function setIsFreeItem($is_free_item)
    {
        $this->container['is_free_item'] = $is_free_item;

        return $this;
    }

    /**
     * Gets ideal_cook_times
     * @return int[]
     */
    public function getIdealCookTimes()
    {
        return $this->container['ideal_cook_times'];
    }

    /**
     * Sets ideal_cook_times
     * @param int[] $ideal_cook_times
     * @return $this
     */
    public function setIdealCookTimes($ideal_cook_times)
    {
        $this->container['ideal_cook_times'] = $ideal_cook_times;

        return $this;
    }

    /**
     * Gets item_id
     * @return int
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     * @param int $item_id
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets item_number
     * @return int
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     * @param int $item_number
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets item_trait
     * @return string
     */
    public function getItemTrait()
    {
        return $this->container['item_trait'];
    }

    /**
     * Sets item_trait
     * @param string $item_trait
     * @return $this
     */
    public function setItemTrait($item_trait)
    {
        $allowed_values = $this->getItemTraitAllowableValues();
        if (!is_null($item_trait) && !in_array($item_trait, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'item_trait', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['item_trait'] = $item_trait;

        return $this;
    }

    /**
     * Gets item_type
     * @return string
     */
    public function getItemType()
    {
        return $this->container['item_type'];
    }

    /**
     * Sets item_type
     * @param string $item_type
     * @return $this
     */
    public function setItemType($item_type)
    {
        $allowed_values = $this->getItemTypeAllowableValues();
        if (!is_null($item_type) && !in_array($item_type, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'item_type', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['item_type'] = $item_type;

        return $this;
    }

    /**
     * Gets modifiers
     * @return \QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOModifier[]
     */
    public function getModifiers()
    {
        return $this->container['modifiers'];
    }

    /**
     * Sets modifiers
     * @param \QsrAutomations\Api\Model\CloudPosContractBaseClassesCheckDTOModifier[] $modifiers
     * @return $this
     */
    public function setModifiers($modifiers)
    {
        $this->container['modifiers'] = $modifiers;

        return $this;
    }

    /**
     * Gets new_time
     * @return int
     */
    public function getNewTime()
    {
        return $this->container['new_time'];
    }

    /**
     * Sets new_time
     * @param int $new_time
     * @return $this
     */
    public function setNewTime($new_time)
    {
        $this->container['new_time'] = $new_time;

        return $this;
    }

    /**
     * Gets new_time_percent
     * @return int
     */
    public function getNewTimePercent()
    {
        return $this->container['new_time_percent'];
    }

    /**
     * Sets new_time_percent
     * @param int $new_time_percent
     * @return $this
     */
    public function setNewTimePercent($new_time_percent)
    {
        $this->container['new_time_percent'] = $new_time_percent;

        return $this;
    }

    /**
     * Gets parent_item_number
     * @return int
     */
    public function getParentItemNumber()
    {
        return $this->container['parent_item_number'];
    }

    /**
     * Sets parent_item_number
     * @param int $parent_item_number
     * @return $this
     */
    public function setParentItemNumber($parent_item_number)
    {
        $this->container['parent_item_number'] = $parent_item_number;

        return $this;
    }

    /**
     * Gets plate_time
     * @return int
     */
    public function getPlateTime()
    {
        return $this->container['plate_time'];
    }

    /**
     * Sets plate_time
     * @param int $plate_time
     * @return $this
     */
    public function setPlateTime($plate_time)
    {
        $this->container['plate_time'] = $plate_time;

        return $this;
    }

    /**
     * Gets printer_description
     * @return string
     */
    public function getPrinterDescription()
    {
        return $this->container['printer_description'];
    }

    /**
     * Sets printer_description
     * @param string $printer_description
     * @return $this
     */
    public function setPrinterDescription($printer_description)
    {
        $this->container['printer_description'] = $printer_description;

        return $this;
    }

    /**
     * Gets priority_time
     * @return int
     */
    public function getPriorityTime()
    {
        return $this->container['priority_time'];
    }

    /**
     * Sets priority_time
     * @param int $priority_time
     * @return $this
     */
    public function setPriorityTime($priority_time)
    {
        $this->container['priority_time'] = $priority_time;

        return $this;
    }

    /**
     * Gets priority_time_percent
     * @return int
     */
    public function getPriorityTimePercent()
    {
        return $this->container['priority_time_percent'];
    }

    /**
     * Sets priority_time_percent
     * @param int $priority_time_percent
     * @return $this
     */
    public function setPriorityTimePercent($priority_time_percent)
    {
        $this->container['priority_time_percent'] = $priority_time_percent;

        return $this;
    }

    /**
     * Gets priority_value
     * @return int
     */
    public function getPriorityValue()
    {
        return $this->container['priority_value'];
    }

    /**
     * Sets priority_value
     * @param int $priority_value
     * @return $this
     */
    public function setPriorityValue($priority_value)
    {
        $this->container['priority_value'] = $priority_value;

        return $this;
    }

    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     * @param int $quantity
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets routing_category
     * @return int
     */
    public function getRoutingCategory()
    {
        return $this->container['routing_category'];
    }

    /**
     * Sets routing_category
     * @param int $routing_category
     * @return $this
     */
    public function setRoutingCategory($routing_category)
    {
        $this->container['routing_category'] = $routing_category;

        return $this;
    }

    /**
     * Gets rush_time
     * @return int
     */
    public function getRushTime()
    {
        return $this->container['rush_time'];
    }

    /**
     * Sets rush_time
     * @param int $rush_time
     * @return $this
     */
    public function setRushTime($rush_time)
    {
        $this->container['rush_time'] = $rush_time;

        return $this;
    }

    /**
     * Gets rush_time_percent
     * @return int
     */
    public function getRushTimePercent()
    {
        return $this->container['rush_time_percent'];
    }

    /**
     * Sets rush_time_percent
     * @param int $rush_time_percent
     * @return $this
     */
    public function setRushTimePercent($rush_time_percent)
    {
        $this->container['rush_time_percent'] = $rush_time_percent;

        return $this;
    }

    /**
     * Gets seat
     * @return int
     */
    public function getSeat()
    {
        return $this->container['seat'];
    }

    /**
     * Sets seat
     * @param int $seat
     * @return $this
     */
    public function setSeat($seat)
    {
        $this->container['seat'] = $seat;

        return $this;
    }

    /**
     * Gets unit_price
     * @return int
     */
    public function getUnitPrice()
    {
        return $this->container['unit_price'];
    }

    /**
     * Sets unit_price
     * @param int $unit_price
     * @return $this
     */
    public function setUnitPrice($unit_price)
    {
        $this->container['unit_price'] = $unit_price;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


