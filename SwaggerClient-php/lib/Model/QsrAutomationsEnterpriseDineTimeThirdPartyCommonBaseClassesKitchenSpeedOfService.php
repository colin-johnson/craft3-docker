<?php
/**
 * QsrAutomationsEnterpriseDineTimeThirdPartyCommonBaseClassesKitchenSpeedOfService
 *
 * PHP version 5
 *
 * @category Class
 * @package  QsrAutomations\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * QSR Automations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace QsrAutomations\Api\Model;

use \ArrayAccess;

/**
 * QsrAutomationsEnterpriseDineTimeThirdPartyCommonBaseClassesKitchenSpeedOfService Class Doc Comment
 *
 * @category    Class
 * @package     QsrAutomations\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QsrAutomationsEnterpriseDineTimeThirdPartyCommonBaseClassesKitchenSpeedOfService implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'QsrAutomations.Enterprise.DineTimeThirdParty.Common.BaseClasses.Kitchen.SpeedOfService';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'activity_level' => 'int',
        'course_name' => 'string',
        'course_number' => 'int',
        'course_paid_time' => 'int',
        'course_park_time' => 'int',
        'course_preparation_time' => 'int',
        'course_start_time_local' => '\DateTime',
        'course_start_time_utc' => '\DateTime',
        'course_type' => 'string',
        'course_uid' => 'string',
        'destination' => 'int',
        'destination_name' => 'string',
        'display_group_id' => 'int',
        'fast_tracked_time' => 'int',
        'first_display_time' => 'int',
        'first_store_time' => 'int',
        'first_tender_time' => 'int',
        'first_viewed_time' => 'int',
        'food_delivered_time' => 'int',
        'insert_date' => '\DateTime',
        'item_category' => 'int',
        'item_cook_start_time' => 'int',
        'item_cook_time' => 'int',
        'item_description' => 'string',
        'item_id' => 'int',
        'item_number' => 'int',
        'item_quantity' => 'int',
        'item_tag_time' => 'int',
        'item_uid' => 'string',
        'last_bump_time' => 'int',
        'last_prepared_time' => 'int',
        'last_recall_time' => 'int',
        'last_total_time' => 'int',
        'last_unbump_time' => 'int',
        'modifier1_id' => 'int',
        'modifier2_id' => 'int',
        'modifier3_id' => 'int',
        'parent_item_number' => 'int',
        'priority_status_reached' => 'bool',
        'priority_time' => 'int',
        'remake_time' => 'int',
        'rush_status_reached' => 'bool',
        'rush_time' => 'int',
        'server_id' => 'int',
        'server_name' => 'string',
        'so_s_tag' => 'string',
        'station_type' => 'string',
        'table' => 'string',
        'terminal_number' => 'int',
        'time_stamp_local' => '\DateTime',
        'time_stamp_utc' => '\DateTime',
        'top_level_item' => 'bool',
        'transaction_number' => 'int',
        'transaction_start_time_local' => '\DateTime',
        'transaction_start_time_uic' => '\DateTime',
        'transaction_uid' => 'string',
        'uid' => 'string',
        'view_id' => 'int',
        'view_name' => 'string',
        'token' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'activity_level' => 'int32',
        'course_name' => null,
        'course_number' => 'int32',
        'course_paid_time' => 'int32',
        'course_park_time' => 'int32',
        'course_preparation_time' => 'int32',
        'course_start_time_local' => 'date-time',
        'course_start_time_utc' => 'date-time',
        'course_type' => null,
        'course_uid' => null,
        'destination' => 'int32',
        'destination_name' => null,
        'display_group_id' => 'int32',
        'fast_tracked_time' => 'int32',
        'first_display_time' => 'int32',
        'first_store_time' => 'int32',
        'first_tender_time' => 'int32',
        'first_viewed_time' => 'int32',
        'food_delivered_time' => 'int32',
        'insert_date' => 'date-time',
        'item_category' => 'int32',
        'item_cook_start_time' => 'int32',
        'item_cook_time' => 'int32',
        'item_description' => null,
        'item_id' => 'int32',
        'item_number' => 'int32',
        'item_quantity' => 'int32',
        'item_tag_time' => 'int32',
        'item_uid' => null,
        'last_bump_time' => 'int32',
        'last_prepared_time' => 'int32',
        'last_recall_time' => 'int32',
        'last_total_time' => 'int32',
        'last_unbump_time' => 'int32',
        'modifier1_id' => 'int32',
        'modifier2_id' => 'int32',
        'modifier3_id' => 'int32',
        'parent_item_number' => 'int32',
        'priority_status_reached' => null,
        'priority_time' => 'int32',
        'remake_time' => 'int32',
        'rush_status_reached' => null,
        'rush_time' => 'int32',
        'server_id' => 'int32',
        'server_name' => null,
        'so_s_tag' => null,
        'station_type' => null,
        'table' => null,
        'terminal_number' => 'int32',
        'time_stamp_local' => 'date-time',
        'time_stamp_utc' => 'date-time',
        'top_level_item' => null,
        'transaction_number' => 'int32',
        'transaction_start_time_local' => 'date-time',
        'transaction_start_time_uic' => 'date-time',
        'transaction_uid' => null,
        'uid' => null,
        'view_id' => 'int32',
        'view_name' => null,
        'token' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'activity_level' => 'ActivityLevel',
        'course_name' => 'CourseName',
        'course_number' => 'CourseNumber',
        'course_paid_time' => 'CoursePaidTime',
        'course_park_time' => 'CourseParkTime',
        'course_preparation_time' => 'CoursePreparationTime',
        'course_start_time_local' => 'CourseStartTimeLocal',
        'course_start_time_utc' => 'CourseStartTimeUTC',
        'course_type' => 'CourseType',
        'course_uid' => 'CourseUid',
        'destination' => 'Destination',
        'destination_name' => 'DestinationName',
        'display_group_id' => 'DisplayGroupId',
        'fast_tracked_time' => 'FastTrackedTime',
        'first_display_time' => 'FirstDisplayTime',
        'first_store_time' => 'FirstStoreTime',
        'first_tender_time' => 'FirstTenderTime',
        'first_viewed_time' => 'FirstViewedTime',
        'food_delivered_time' => 'FoodDeliveredTime',
        'insert_date' => 'InsertDate',
        'item_category' => 'ItemCategory',
        'item_cook_start_time' => 'ItemCookStartTime',
        'item_cook_time' => 'ItemCookTime',
        'item_description' => 'ItemDescription',
        'item_id' => 'ItemId',
        'item_number' => 'ItemNumber',
        'item_quantity' => 'ItemQuantity',
        'item_tag_time' => 'ItemTagTime',
        'item_uid' => 'ItemUID',
        'last_bump_time' => 'LastBumpTime',
        'last_prepared_time' => 'LastPreparedTime',
        'last_recall_time' => 'LastRecallTime',
        'last_total_time' => 'LastTotalTime',
        'last_unbump_time' => 'LastUnbumpTime',
        'modifier1_id' => 'Modifier1Id',
        'modifier2_id' => 'Modifier2Id',
        'modifier3_id' => 'Modifier3Id',
        'parent_item_number' => 'ParentItemNumber',
        'priority_status_reached' => 'PriorityStatusReached',
        'priority_time' => 'PriorityTime',
        'remake_time' => 'RemakeTime',
        'rush_status_reached' => 'RushStatusReached',
        'rush_time' => 'RushTime',
        'server_id' => 'ServerId',
        'server_name' => 'ServerName',
        'so_s_tag' => 'SoSTag',
        'station_type' => 'StationType',
        'table' => 'Table',
        'terminal_number' => 'TerminalNumber',
        'time_stamp_local' => 'TimeStampLocal',
        'time_stamp_utc' => 'TimeStampUTC',
        'top_level_item' => 'TopLevelItem',
        'transaction_number' => 'TransactionNumber',
        'transaction_start_time_local' => 'TransactionStartTimeLocal',
        'transaction_start_time_uic' => 'TransactionStartTimeUIC',
        'transaction_uid' => 'TransactionUID',
        'uid' => 'UID',
        'view_id' => 'ViewId',
        'view_name' => 'ViewName',
        'token' => 'Token'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'activity_level' => 'setActivityLevel',
        'course_name' => 'setCourseName',
        'course_number' => 'setCourseNumber',
        'course_paid_time' => 'setCoursePaidTime',
        'course_park_time' => 'setCourseParkTime',
        'course_preparation_time' => 'setCoursePreparationTime',
        'course_start_time_local' => 'setCourseStartTimeLocal',
        'course_start_time_utc' => 'setCourseStartTimeUtc',
        'course_type' => 'setCourseType',
        'course_uid' => 'setCourseUid',
        'destination' => 'setDestination',
        'destination_name' => 'setDestinationName',
        'display_group_id' => 'setDisplayGroupId',
        'fast_tracked_time' => 'setFastTrackedTime',
        'first_display_time' => 'setFirstDisplayTime',
        'first_store_time' => 'setFirstStoreTime',
        'first_tender_time' => 'setFirstTenderTime',
        'first_viewed_time' => 'setFirstViewedTime',
        'food_delivered_time' => 'setFoodDeliveredTime',
        'insert_date' => 'setInsertDate',
        'item_category' => 'setItemCategory',
        'item_cook_start_time' => 'setItemCookStartTime',
        'item_cook_time' => 'setItemCookTime',
        'item_description' => 'setItemDescription',
        'item_id' => 'setItemId',
        'item_number' => 'setItemNumber',
        'item_quantity' => 'setItemQuantity',
        'item_tag_time' => 'setItemTagTime',
        'item_uid' => 'setItemUid',
        'last_bump_time' => 'setLastBumpTime',
        'last_prepared_time' => 'setLastPreparedTime',
        'last_recall_time' => 'setLastRecallTime',
        'last_total_time' => 'setLastTotalTime',
        'last_unbump_time' => 'setLastUnbumpTime',
        'modifier1_id' => 'setModifier1Id',
        'modifier2_id' => 'setModifier2Id',
        'modifier3_id' => 'setModifier3Id',
        'parent_item_number' => 'setParentItemNumber',
        'priority_status_reached' => 'setPriorityStatusReached',
        'priority_time' => 'setPriorityTime',
        'remake_time' => 'setRemakeTime',
        'rush_status_reached' => 'setRushStatusReached',
        'rush_time' => 'setRushTime',
        'server_id' => 'setServerId',
        'server_name' => 'setServerName',
        'so_s_tag' => 'setSoSTag',
        'station_type' => 'setStationType',
        'table' => 'setTable',
        'terminal_number' => 'setTerminalNumber',
        'time_stamp_local' => 'setTimeStampLocal',
        'time_stamp_utc' => 'setTimeStampUtc',
        'top_level_item' => 'setTopLevelItem',
        'transaction_number' => 'setTransactionNumber',
        'transaction_start_time_local' => 'setTransactionStartTimeLocal',
        'transaction_start_time_uic' => 'setTransactionStartTimeUic',
        'transaction_uid' => 'setTransactionUid',
        'uid' => 'setUid',
        'view_id' => 'setViewId',
        'view_name' => 'setViewName',
        'token' => 'setToken'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'activity_level' => 'getActivityLevel',
        'course_name' => 'getCourseName',
        'course_number' => 'getCourseNumber',
        'course_paid_time' => 'getCoursePaidTime',
        'course_park_time' => 'getCourseParkTime',
        'course_preparation_time' => 'getCoursePreparationTime',
        'course_start_time_local' => 'getCourseStartTimeLocal',
        'course_start_time_utc' => 'getCourseStartTimeUtc',
        'course_type' => 'getCourseType',
        'course_uid' => 'getCourseUid',
        'destination' => 'getDestination',
        'destination_name' => 'getDestinationName',
        'display_group_id' => 'getDisplayGroupId',
        'fast_tracked_time' => 'getFastTrackedTime',
        'first_display_time' => 'getFirstDisplayTime',
        'first_store_time' => 'getFirstStoreTime',
        'first_tender_time' => 'getFirstTenderTime',
        'first_viewed_time' => 'getFirstViewedTime',
        'food_delivered_time' => 'getFoodDeliveredTime',
        'insert_date' => 'getInsertDate',
        'item_category' => 'getItemCategory',
        'item_cook_start_time' => 'getItemCookStartTime',
        'item_cook_time' => 'getItemCookTime',
        'item_description' => 'getItemDescription',
        'item_id' => 'getItemId',
        'item_number' => 'getItemNumber',
        'item_quantity' => 'getItemQuantity',
        'item_tag_time' => 'getItemTagTime',
        'item_uid' => 'getItemUid',
        'last_bump_time' => 'getLastBumpTime',
        'last_prepared_time' => 'getLastPreparedTime',
        'last_recall_time' => 'getLastRecallTime',
        'last_total_time' => 'getLastTotalTime',
        'last_unbump_time' => 'getLastUnbumpTime',
        'modifier1_id' => 'getModifier1Id',
        'modifier2_id' => 'getModifier2Id',
        'modifier3_id' => 'getModifier3Id',
        'parent_item_number' => 'getParentItemNumber',
        'priority_status_reached' => 'getPriorityStatusReached',
        'priority_time' => 'getPriorityTime',
        'remake_time' => 'getRemakeTime',
        'rush_status_reached' => 'getRushStatusReached',
        'rush_time' => 'getRushTime',
        'server_id' => 'getServerId',
        'server_name' => 'getServerName',
        'so_s_tag' => 'getSoSTag',
        'station_type' => 'getStationType',
        'table' => 'getTable',
        'terminal_number' => 'getTerminalNumber',
        'time_stamp_local' => 'getTimeStampLocal',
        'time_stamp_utc' => 'getTimeStampUtc',
        'top_level_item' => 'getTopLevelItem',
        'transaction_number' => 'getTransactionNumber',
        'transaction_start_time_local' => 'getTransactionStartTimeLocal',
        'transaction_start_time_uic' => 'getTransactionStartTimeUic',
        'transaction_uid' => 'getTransactionUid',
        'uid' => 'getUid',
        'view_id' => 'getViewId',
        'view_name' => 'getViewName',
        'token' => 'getToken'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['activity_level'] = isset($data['activity_level']) ? $data['activity_level'] : null;
        $this->container['course_name'] = isset($data['course_name']) ? $data['course_name'] : null;
        $this->container['course_number'] = isset($data['course_number']) ? $data['course_number'] : null;
        $this->container['course_paid_time'] = isset($data['course_paid_time']) ? $data['course_paid_time'] : null;
        $this->container['course_park_time'] = isset($data['course_park_time']) ? $data['course_park_time'] : null;
        $this->container['course_preparation_time'] = isset($data['course_preparation_time']) ? $data['course_preparation_time'] : null;
        $this->container['course_start_time_local'] = isset($data['course_start_time_local']) ? $data['course_start_time_local'] : null;
        $this->container['course_start_time_utc'] = isset($data['course_start_time_utc']) ? $data['course_start_time_utc'] : null;
        $this->container['course_type'] = isset($data['course_type']) ? $data['course_type'] : null;
        $this->container['course_uid'] = isset($data['course_uid']) ? $data['course_uid'] : null;
        $this->container['destination'] = isset($data['destination']) ? $data['destination'] : null;
        $this->container['destination_name'] = isset($data['destination_name']) ? $data['destination_name'] : null;
        $this->container['display_group_id'] = isset($data['display_group_id']) ? $data['display_group_id'] : null;
        $this->container['fast_tracked_time'] = isset($data['fast_tracked_time']) ? $data['fast_tracked_time'] : null;
        $this->container['first_display_time'] = isset($data['first_display_time']) ? $data['first_display_time'] : null;
        $this->container['first_store_time'] = isset($data['first_store_time']) ? $data['first_store_time'] : null;
        $this->container['first_tender_time'] = isset($data['first_tender_time']) ? $data['first_tender_time'] : null;
        $this->container['first_viewed_time'] = isset($data['first_viewed_time']) ? $data['first_viewed_time'] : null;
        $this->container['food_delivered_time'] = isset($data['food_delivered_time']) ? $data['food_delivered_time'] : null;
        $this->container['insert_date'] = isset($data['insert_date']) ? $data['insert_date'] : null;
        $this->container['item_category'] = isset($data['item_category']) ? $data['item_category'] : null;
        $this->container['item_cook_start_time'] = isset($data['item_cook_start_time']) ? $data['item_cook_start_time'] : null;
        $this->container['item_cook_time'] = isset($data['item_cook_time']) ? $data['item_cook_time'] : null;
        $this->container['item_description'] = isset($data['item_description']) ? $data['item_description'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['item_quantity'] = isset($data['item_quantity']) ? $data['item_quantity'] : null;
        $this->container['item_tag_time'] = isset($data['item_tag_time']) ? $data['item_tag_time'] : null;
        $this->container['item_uid'] = isset($data['item_uid']) ? $data['item_uid'] : null;
        $this->container['last_bump_time'] = isset($data['last_bump_time']) ? $data['last_bump_time'] : null;
        $this->container['last_prepared_time'] = isset($data['last_prepared_time']) ? $data['last_prepared_time'] : null;
        $this->container['last_recall_time'] = isset($data['last_recall_time']) ? $data['last_recall_time'] : null;
        $this->container['last_total_time'] = isset($data['last_total_time']) ? $data['last_total_time'] : null;
        $this->container['last_unbump_time'] = isset($data['last_unbump_time']) ? $data['last_unbump_time'] : null;
        $this->container['modifier1_id'] = isset($data['modifier1_id']) ? $data['modifier1_id'] : null;
        $this->container['modifier2_id'] = isset($data['modifier2_id']) ? $data['modifier2_id'] : null;
        $this->container['modifier3_id'] = isset($data['modifier3_id']) ? $data['modifier3_id'] : null;
        $this->container['parent_item_number'] = isset($data['parent_item_number']) ? $data['parent_item_number'] : null;
        $this->container['priority_status_reached'] = isset($data['priority_status_reached']) ? $data['priority_status_reached'] : null;
        $this->container['priority_time'] = isset($data['priority_time']) ? $data['priority_time'] : null;
        $this->container['remake_time'] = isset($data['remake_time']) ? $data['remake_time'] : null;
        $this->container['rush_status_reached'] = isset($data['rush_status_reached']) ? $data['rush_status_reached'] : null;
        $this->container['rush_time'] = isset($data['rush_time']) ? $data['rush_time'] : null;
        $this->container['server_id'] = isset($data['server_id']) ? $data['server_id'] : null;
        $this->container['server_name'] = isset($data['server_name']) ? $data['server_name'] : null;
        $this->container['so_s_tag'] = isset($data['so_s_tag']) ? $data['so_s_tag'] : null;
        $this->container['station_type'] = isset($data['station_type']) ? $data['station_type'] : null;
        $this->container['table'] = isset($data['table']) ? $data['table'] : null;
        $this->container['terminal_number'] = isset($data['terminal_number']) ? $data['terminal_number'] : null;
        $this->container['time_stamp_local'] = isset($data['time_stamp_local']) ? $data['time_stamp_local'] : null;
        $this->container['time_stamp_utc'] = isset($data['time_stamp_utc']) ? $data['time_stamp_utc'] : null;
        $this->container['top_level_item'] = isset($data['top_level_item']) ? $data['top_level_item'] : null;
        $this->container['transaction_number'] = isset($data['transaction_number']) ? $data['transaction_number'] : null;
        $this->container['transaction_start_time_local'] = isset($data['transaction_start_time_local']) ? $data['transaction_start_time_local'] : null;
        $this->container['transaction_start_time_uic'] = isset($data['transaction_start_time_uic']) ? $data['transaction_start_time_uic'] : null;
        $this->container['transaction_uid'] = isset($data['transaction_uid']) ? $data['transaction_uid'] : null;
        $this->container['uid'] = isset($data['uid']) ? $data['uid'] : null;
        $this->container['view_id'] = isset($data['view_id']) ? $data['view_id'] : null;
        $this->container['view_name'] = isset($data['view_name']) ? $data['view_name'] : null;
        $this->container['token'] = isset($data['token']) ? $data['token'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets activity_level
     * @return int
     */
    public function getActivityLevel()
    {
        return $this->container['activity_level'];
    }

    /**
     * Sets activity_level
     * @param int $activity_level
     * @return $this
     */
    public function setActivityLevel($activity_level)
    {
        $this->container['activity_level'] = $activity_level;

        return $this;
    }

    /**
     * Gets course_name
     * @return string
     */
    public function getCourseName()
    {
        return $this->container['course_name'];
    }

    /**
     * Sets course_name
     * @param string $course_name
     * @return $this
     */
    public function setCourseName($course_name)
    {
        $this->container['course_name'] = $course_name;

        return $this;
    }

    /**
     * Gets course_number
     * @return int
     */
    public function getCourseNumber()
    {
        return $this->container['course_number'];
    }

    /**
     * Sets course_number
     * @param int $course_number
     * @return $this
     */
    public function setCourseNumber($course_number)
    {
        $this->container['course_number'] = $course_number;

        return $this;
    }

    /**
     * Gets course_paid_time
     * @return int
     */
    public function getCoursePaidTime()
    {
        return $this->container['course_paid_time'];
    }

    /**
     * Sets course_paid_time
     * @param int $course_paid_time
     * @return $this
     */
    public function setCoursePaidTime($course_paid_time)
    {
        $this->container['course_paid_time'] = $course_paid_time;

        return $this;
    }

    /**
     * Gets course_park_time
     * @return int
     */
    public function getCourseParkTime()
    {
        return $this->container['course_park_time'];
    }

    /**
     * Sets course_park_time
     * @param int $course_park_time
     * @return $this
     */
    public function setCourseParkTime($course_park_time)
    {
        $this->container['course_park_time'] = $course_park_time;

        return $this;
    }

    /**
     * Gets course_preparation_time
     * @return int
     */
    public function getCoursePreparationTime()
    {
        return $this->container['course_preparation_time'];
    }

    /**
     * Sets course_preparation_time
     * @param int $course_preparation_time
     * @return $this
     */
    public function setCoursePreparationTime($course_preparation_time)
    {
        $this->container['course_preparation_time'] = $course_preparation_time;

        return $this;
    }

    /**
     * Gets course_start_time_local
     * @return \DateTime
     */
    public function getCourseStartTimeLocal()
    {
        return $this->container['course_start_time_local'];
    }

    /**
     * Sets course_start_time_local
     * @param \DateTime $course_start_time_local
     * @return $this
     */
    public function setCourseStartTimeLocal($course_start_time_local)
    {
        $this->container['course_start_time_local'] = $course_start_time_local;

        return $this;
    }

    /**
     * Gets course_start_time_utc
     * @return \DateTime
     */
    public function getCourseStartTimeUtc()
    {
        return $this->container['course_start_time_utc'];
    }

    /**
     * Sets course_start_time_utc
     * @param \DateTime $course_start_time_utc
     * @return $this
     */
    public function setCourseStartTimeUtc($course_start_time_utc)
    {
        $this->container['course_start_time_utc'] = $course_start_time_utc;

        return $this;
    }

    /**
     * Gets course_type
     * @return string
     */
    public function getCourseType()
    {
        return $this->container['course_type'];
    }

    /**
     * Sets course_type
     * @param string $course_type
     * @return $this
     */
    public function setCourseType($course_type)
    {
        $this->container['course_type'] = $course_type;

        return $this;
    }

    /**
     * Gets course_uid
     * @return string
     */
    public function getCourseUid()
    {
        return $this->container['course_uid'];
    }

    /**
     * Sets course_uid
     * @param string $course_uid
     * @return $this
     */
    public function setCourseUid($course_uid)
    {
        $this->container['course_uid'] = $course_uid;

        return $this;
    }

    /**
     * Gets destination
     * @return int
     */
    public function getDestination()
    {
        return $this->container['destination'];
    }

    /**
     * Sets destination
     * @param int $destination
     * @return $this
     */
    public function setDestination($destination)
    {
        $this->container['destination'] = $destination;

        return $this;
    }

    /**
     * Gets destination_name
     * @return string
     */
    public function getDestinationName()
    {
        return $this->container['destination_name'];
    }

    /**
     * Sets destination_name
     * @param string $destination_name
     * @return $this
     */
    public function setDestinationName($destination_name)
    {
        $this->container['destination_name'] = $destination_name;

        return $this;
    }

    /**
     * Gets display_group_id
     * @return int
     */
    public function getDisplayGroupId()
    {
        return $this->container['display_group_id'];
    }

    /**
     * Sets display_group_id
     * @param int $display_group_id
     * @return $this
     */
    public function setDisplayGroupId($display_group_id)
    {
        $this->container['display_group_id'] = $display_group_id;

        return $this;
    }

    /**
     * Gets fast_tracked_time
     * @return int
     */
    public function getFastTrackedTime()
    {
        return $this->container['fast_tracked_time'];
    }

    /**
     * Sets fast_tracked_time
     * @param int $fast_tracked_time
     * @return $this
     */
    public function setFastTrackedTime($fast_tracked_time)
    {
        $this->container['fast_tracked_time'] = $fast_tracked_time;

        return $this;
    }

    /**
     * Gets first_display_time
     * @return int
     */
    public function getFirstDisplayTime()
    {
        return $this->container['first_display_time'];
    }

    /**
     * Sets first_display_time
     * @param int $first_display_time
     * @return $this
     */
    public function setFirstDisplayTime($first_display_time)
    {
        $this->container['first_display_time'] = $first_display_time;

        return $this;
    }

    /**
     * Gets first_store_time
     * @return int
     */
    public function getFirstStoreTime()
    {
        return $this->container['first_store_time'];
    }

    /**
     * Sets first_store_time
     * @param int $first_store_time
     * @return $this
     */
    public function setFirstStoreTime($first_store_time)
    {
        $this->container['first_store_time'] = $first_store_time;

        return $this;
    }

    /**
     * Gets first_tender_time
     * @return int
     */
    public function getFirstTenderTime()
    {
        return $this->container['first_tender_time'];
    }

    /**
     * Sets first_tender_time
     * @param int $first_tender_time
     * @return $this
     */
    public function setFirstTenderTime($first_tender_time)
    {
        $this->container['first_tender_time'] = $first_tender_time;

        return $this;
    }

    /**
     * Gets first_viewed_time
     * @return int
     */
    public function getFirstViewedTime()
    {
        return $this->container['first_viewed_time'];
    }

    /**
     * Sets first_viewed_time
     * @param int $first_viewed_time
     * @return $this
     */
    public function setFirstViewedTime($first_viewed_time)
    {
        $this->container['first_viewed_time'] = $first_viewed_time;

        return $this;
    }

    /**
     * Gets food_delivered_time
     * @return int
     */
    public function getFoodDeliveredTime()
    {
        return $this->container['food_delivered_time'];
    }

    /**
     * Sets food_delivered_time
     * @param int $food_delivered_time
     * @return $this
     */
    public function setFoodDeliveredTime($food_delivered_time)
    {
        $this->container['food_delivered_time'] = $food_delivered_time;

        return $this;
    }

    /**
     * Gets insert_date
     * @return \DateTime
     */
    public function getInsertDate()
    {
        return $this->container['insert_date'];
    }

    /**
     * Sets insert_date
     * @param \DateTime $insert_date
     * @return $this
     */
    public function setInsertDate($insert_date)
    {
        $this->container['insert_date'] = $insert_date;

        return $this;
    }

    /**
     * Gets item_category
     * @return int
     */
    public function getItemCategory()
    {
        return $this->container['item_category'];
    }

    /**
     * Sets item_category
     * @param int $item_category
     * @return $this
     */
    public function setItemCategory($item_category)
    {
        $this->container['item_category'] = $item_category;

        return $this;
    }

    /**
     * Gets item_cook_start_time
     * @return int
     */
    public function getItemCookStartTime()
    {
        return $this->container['item_cook_start_time'];
    }

    /**
     * Sets item_cook_start_time
     * @param int $item_cook_start_time
     * @return $this
     */
    public function setItemCookStartTime($item_cook_start_time)
    {
        $this->container['item_cook_start_time'] = $item_cook_start_time;

        return $this;
    }

    /**
     * Gets item_cook_time
     * @return int
     */
    public function getItemCookTime()
    {
        return $this->container['item_cook_time'];
    }

    /**
     * Sets item_cook_time
     * @param int $item_cook_time
     * @return $this
     */
    public function setItemCookTime($item_cook_time)
    {
        $this->container['item_cook_time'] = $item_cook_time;

        return $this;
    }

    /**
     * Gets item_description
     * @return string
     */
    public function getItemDescription()
    {
        return $this->container['item_description'];
    }

    /**
     * Sets item_description
     * @param string $item_description
     * @return $this
     */
    public function setItemDescription($item_description)
    {
        $this->container['item_description'] = $item_description;

        return $this;
    }

    /**
     * Gets item_id
     * @return int
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     * @param int $item_id
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets item_number
     * @return int
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     * @param int $item_number
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets item_quantity
     * @return int
     */
    public function getItemQuantity()
    {
        return $this->container['item_quantity'];
    }

    /**
     * Sets item_quantity
     * @param int $item_quantity
     * @return $this
     */
    public function setItemQuantity($item_quantity)
    {
        $this->container['item_quantity'] = $item_quantity;

        return $this;
    }

    /**
     * Gets item_tag_time
     * @return int
     */
    public function getItemTagTime()
    {
        return $this->container['item_tag_time'];
    }

    /**
     * Sets item_tag_time
     * @param int $item_tag_time
     * @return $this
     */
    public function setItemTagTime($item_tag_time)
    {
        $this->container['item_tag_time'] = $item_tag_time;

        return $this;
    }

    /**
     * Gets item_uid
     * @return string
     */
    public function getItemUid()
    {
        return $this->container['item_uid'];
    }

    /**
     * Sets item_uid
     * @param string $item_uid
     * @return $this
     */
    public function setItemUid($item_uid)
    {
        $this->container['item_uid'] = $item_uid;

        return $this;
    }

    /**
     * Gets last_bump_time
     * @return int
     */
    public function getLastBumpTime()
    {
        return $this->container['last_bump_time'];
    }

    /**
     * Sets last_bump_time
     * @param int $last_bump_time
     * @return $this
     */
    public function setLastBumpTime($last_bump_time)
    {
        $this->container['last_bump_time'] = $last_bump_time;

        return $this;
    }

    /**
     * Gets last_prepared_time
     * @return int
     */
    public function getLastPreparedTime()
    {
        return $this->container['last_prepared_time'];
    }

    /**
     * Sets last_prepared_time
     * @param int $last_prepared_time
     * @return $this
     */
    public function setLastPreparedTime($last_prepared_time)
    {
        $this->container['last_prepared_time'] = $last_prepared_time;

        return $this;
    }

    /**
     * Gets last_recall_time
     * @return int
     */
    public function getLastRecallTime()
    {
        return $this->container['last_recall_time'];
    }

    /**
     * Sets last_recall_time
     * @param int $last_recall_time
     * @return $this
     */
    public function setLastRecallTime($last_recall_time)
    {
        $this->container['last_recall_time'] = $last_recall_time;

        return $this;
    }

    /**
     * Gets last_total_time
     * @return int
     */
    public function getLastTotalTime()
    {
        return $this->container['last_total_time'];
    }

    /**
     * Sets last_total_time
     * @param int $last_total_time
     * @return $this
     */
    public function setLastTotalTime($last_total_time)
    {
        $this->container['last_total_time'] = $last_total_time;

        return $this;
    }

    /**
     * Gets last_unbump_time
     * @return int
     */
    public function getLastUnbumpTime()
    {
        return $this->container['last_unbump_time'];
    }

    /**
     * Sets last_unbump_time
     * @param int $last_unbump_time
     * @return $this
     */
    public function setLastUnbumpTime($last_unbump_time)
    {
        $this->container['last_unbump_time'] = $last_unbump_time;

        return $this;
    }

    /**
     * Gets modifier1_id
     * @return int
     */
    public function getModifier1Id()
    {
        return $this->container['modifier1_id'];
    }

    /**
     * Sets modifier1_id
     * @param int $modifier1_id
     * @return $this
     */
    public function setModifier1Id($modifier1_id)
    {
        $this->container['modifier1_id'] = $modifier1_id;

        return $this;
    }

    /**
     * Gets modifier2_id
     * @return int
     */
    public function getModifier2Id()
    {
        return $this->container['modifier2_id'];
    }

    /**
     * Sets modifier2_id
     * @param int $modifier2_id
     * @return $this
     */
    public function setModifier2Id($modifier2_id)
    {
        $this->container['modifier2_id'] = $modifier2_id;

        return $this;
    }

    /**
     * Gets modifier3_id
     * @return int
     */
    public function getModifier3Id()
    {
        return $this->container['modifier3_id'];
    }

    /**
     * Sets modifier3_id
     * @param int $modifier3_id
     * @return $this
     */
    public function setModifier3Id($modifier3_id)
    {
        $this->container['modifier3_id'] = $modifier3_id;

        return $this;
    }

    /**
     * Gets parent_item_number
     * @return int
     */
    public function getParentItemNumber()
    {
        return $this->container['parent_item_number'];
    }

    /**
     * Sets parent_item_number
     * @param int $parent_item_number
     * @return $this
     */
    public function setParentItemNumber($parent_item_number)
    {
        $this->container['parent_item_number'] = $parent_item_number;

        return $this;
    }

    /**
     * Gets priority_status_reached
     * @return bool
     */
    public function getPriorityStatusReached()
    {
        return $this->container['priority_status_reached'];
    }

    /**
     * Sets priority_status_reached
     * @param bool $priority_status_reached
     * @return $this
     */
    public function setPriorityStatusReached($priority_status_reached)
    {
        $this->container['priority_status_reached'] = $priority_status_reached;

        return $this;
    }

    /**
     * Gets priority_time
     * @return int
     */
    public function getPriorityTime()
    {
        return $this->container['priority_time'];
    }

    /**
     * Sets priority_time
     * @param int $priority_time
     * @return $this
     */
    public function setPriorityTime($priority_time)
    {
        $this->container['priority_time'] = $priority_time;

        return $this;
    }

    /**
     * Gets remake_time
     * @return int
     */
    public function getRemakeTime()
    {
        return $this->container['remake_time'];
    }

    /**
     * Sets remake_time
     * @param int $remake_time
     * @return $this
     */
    public function setRemakeTime($remake_time)
    {
        $this->container['remake_time'] = $remake_time;

        return $this;
    }

    /**
     * Gets rush_status_reached
     * @return bool
     */
    public function getRushStatusReached()
    {
        return $this->container['rush_status_reached'];
    }

    /**
     * Sets rush_status_reached
     * @param bool $rush_status_reached
     * @return $this
     */
    public function setRushStatusReached($rush_status_reached)
    {
        $this->container['rush_status_reached'] = $rush_status_reached;

        return $this;
    }

    /**
     * Gets rush_time
     * @return int
     */
    public function getRushTime()
    {
        return $this->container['rush_time'];
    }

    /**
     * Sets rush_time
     * @param int $rush_time
     * @return $this
     */
    public function setRushTime($rush_time)
    {
        $this->container['rush_time'] = $rush_time;

        return $this;
    }

    /**
     * Gets server_id
     * @return int
     */
    public function getServerId()
    {
        return $this->container['server_id'];
    }

    /**
     * Sets server_id
     * @param int $server_id
     * @return $this
     */
    public function setServerId($server_id)
    {
        $this->container['server_id'] = $server_id;

        return $this;
    }

    /**
     * Gets server_name
     * @return string
     */
    public function getServerName()
    {
        return $this->container['server_name'];
    }

    /**
     * Sets server_name
     * @param string $server_name
     * @return $this
     */
    public function setServerName($server_name)
    {
        $this->container['server_name'] = $server_name;

        return $this;
    }

    /**
     * Gets so_s_tag
     * @return string
     */
    public function getSoSTag()
    {
        return $this->container['so_s_tag'];
    }

    /**
     * Sets so_s_tag
     * @param string $so_s_tag
     * @return $this
     */
    public function setSoSTag($so_s_tag)
    {
        $this->container['so_s_tag'] = $so_s_tag;

        return $this;
    }

    /**
     * Gets station_type
     * @return string
     */
    public function getStationType()
    {
        return $this->container['station_type'];
    }

    /**
     * Sets station_type
     * @param string $station_type
     * @return $this
     */
    public function setStationType($station_type)
    {
        $this->container['station_type'] = $station_type;

        return $this;
    }

    /**
     * Gets table
     * @return string
     */
    public function getTable()
    {
        return $this->container['table'];
    }

    /**
     * Sets table
     * @param string $table
     * @return $this
     */
    public function setTable($table)
    {
        $this->container['table'] = $table;

        return $this;
    }

    /**
     * Gets terminal_number
     * @return int
     */
    public function getTerminalNumber()
    {
        return $this->container['terminal_number'];
    }

    /**
     * Sets terminal_number
     * @param int $terminal_number
     * @return $this
     */
    public function setTerminalNumber($terminal_number)
    {
        $this->container['terminal_number'] = $terminal_number;

        return $this;
    }

    /**
     * Gets time_stamp_local
     * @return \DateTime
     */
    public function getTimeStampLocal()
    {
        return $this->container['time_stamp_local'];
    }

    /**
     * Sets time_stamp_local
     * @param \DateTime $time_stamp_local
     * @return $this
     */
    public function setTimeStampLocal($time_stamp_local)
    {
        $this->container['time_stamp_local'] = $time_stamp_local;

        return $this;
    }

    /**
     * Gets time_stamp_utc
     * @return \DateTime
     */
    public function getTimeStampUtc()
    {
        return $this->container['time_stamp_utc'];
    }

    /**
     * Sets time_stamp_utc
     * @param \DateTime $time_stamp_utc
     * @return $this
     */
    public function setTimeStampUtc($time_stamp_utc)
    {
        $this->container['time_stamp_utc'] = $time_stamp_utc;

        return $this;
    }

    /**
     * Gets top_level_item
     * @return bool
     */
    public function getTopLevelItem()
    {
        return $this->container['top_level_item'];
    }

    /**
     * Sets top_level_item
     * @param bool $top_level_item
     * @return $this
     */
    public function setTopLevelItem($top_level_item)
    {
        $this->container['top_level_item'] = $top_level_item;

        return $this;
    }

    /**
     * Gets transaction_number
     * @return int
     */
    public function getTransactionNumber()
    {
        return $this->container['transaction_number'];
    }

    /**
     * Sets transaction_number
     * @param int $transaction_number
     * @return $this
     */
    public function setTransactionNumber($transaction_number)
    {
        $this->container['transaction_number'] = $transaction_number;

        return $this;
    }

    /**
     * Gets transaction_start_time_local
     * @return \DateTime
     */
    public function getTransactionStartTimeLocal()
    {
        return $this->container['transaction_start_time_local'];
    }

    /**
     * Sets transaction_start_time_local
     * @param \DateTime $transaction_start_time_local
     * @return $this
     */
    public function setTransactionStartTimeLocal($transaction_start_time_local)
    {
        $this->container['transaction_start_time_local'] = $transaction_start_time_local;

        return $this;
    }

    /**
     * Gets transaction_start_time_uic
     * @return \DateTime
     */
    public function getTransactionStartTimeUic()
    {
        return $this->container['transaction_start_time_uic'];
    }

    /**
     * Sets transaction_start_time_uic
     * @param \DateTime $transaction_start_time_uic
     * @return $this
     */
    public function setTransactionStartTimeUic($transaction_start_time_uic)
    {
        $this->container['transaction_start_time_uic'] = $transaction_start_time_uic;

        return $this;
    }

    /**
     * Gets transaction_uid
     * @return string
     */
    public function getTransactionUid()
    {
        return $this->container['transaction_uid'];
    }

    /**
     * Sets transaction_uid
     * @param string $transaction_uid
     * @return $this
     */
    public function setTransactionUid($transaction_uid)
    {
        $this->container['transaction_uid'] = $transaction_uid;

        return $this;
    }

    /**
     * Gets uid
     * @return string
     */
    public function getUid()
    {
        return $this->container['uid'];
    }

    /**
     * Sets uid
     * @param string $uid
     * @return $this
     */
    public function setUid($uid)
    {
        $this->container['uid'] = $uid;

        return $this;
    }

    /**
     * Gets view_id
     * @return int
     */
    public function getViewId()
    {
        return $this->container['view_id'];
    }

    /**
     * Sets view_id
     * @param int $view_id
     * @return $this
     */
    public function setViewId($view_id)
    {
        $this->container['view_id'] = $view_id;

        return $this;
    }

    /**
     * Gets view_name
     * @return string
     */
    public function getViewName()
    {
        return $this->container['view_name'];
    }

    /**
     * Sets view_name
     * @param string $view_name
     * @return $this
     */
    public function setViewName($view_name)
    {
        $this->container['view_name'] = $view_name;

        return $this;
    }

    /**
     * Gets token
     * @return string
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     * @param string $token
     * @return $this
     */
    public function setToken($token)
    {
        $this->container['token'] = $token;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


