<?php
/**
 * QsrAutomationsDineTimeVisitsCommandPatchVisitCommand
 *
 * PHP version 5
 *
 * @category Class
 * @package  QsrAutomations\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * QSR Automations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace QsrAutomations\Api\Model;

use \ArrayAccess;

/**
 * QsrAutomationsDineTimeVisitsCommandPatchVisitCommand Class Doc Comment
 *
 * @category    Class
 * @package     QsrAutomations\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QsrAutomationsDineTimeVisitsCommandPatchVisitCommand implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'QsrAutomations.DineTime.Visits.Command.PatchVisitCommand';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'custom_values' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[]',
        'party_mix' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix',
        'prefered_table_name' => 'string',
        'seating_area_id' => 'int',
        'seating_area_name' => 'string',
        'size' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'custom_values' => null,
        'party_mix' => null,
        'prefered_table_name' => null,
        'seating_area_id' => 'int32',
        'seating_area_name' => null,
        'size' => 'int32'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'custom_values' => 'CustomValues',
        'party_mix' => 'PartyMix',
        'prefered_table_name' => 'PreferedTableName',
        'seating_area_id' => 'SeatingAreaId',
        'seating_area_name' => 'SeatingAreaName',
        'size' => 'Size'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'custom_values' => 'setCustomValues',
        'party_mix' => 'setPartyMix',
        'prefered_table_name' => 'setPreferedTableName',
        'seating_area_id' => 'setSeatingAreaId',
        'seating_area_name' => 'setSeatingAreaName',
        'size' => 'setSize'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'custom_values' => 'getCustomValues',
        'party_mix' => 'getPartyMix',
        'prefered_table_name' => 'getPreferedTableName',
        'seating_area_id' => 'getSeatingAreaId',
        'seating_area_name' => 'getSeatingAreaName',
        'size' => 'getSize'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['custom_values'] = isset($data['custom_values']) ? $data['custom_values'] : null;
        $this->container['party_mix'] = isset($data['party_mix']) ? $data['party_mix'] : null;
        $this->container['prefered_table_name'] = isset($data['prefered_table_name']) ? $data['prefered_table_name'] : null;
        $this->container['seating_area_id'] = isset($data['seating_area_id']) ? $data['seating_area_id'] : null;
        $this->container['seating_area_name'] = isset($data['seating_area_name']) ? $data['seating_area_name'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets custom_values
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[]
     */
    public function getCustomValues()
    {
        return $this->container['custom_values'];
    }

    /**
     * Sets custom_values
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[] $custom_values
     * @return $this
     */
    public function setCustomValues($custom_values)
    {
        $this->container['custom_values'] = $custom_values;

        return $this;
    }

    /**
     * Gets party_mix
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix
     */
    public function getPartyMix()
    {
        return $this->container['party_mix'];
    }

    /**
     * Sets party_mix
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix $party_mix
     * @return $this
     */
    public function setPartyMix($party_mix)
    {
        $this->container['party_mix'] = $party_mix;

        return $this;
    }

    /**
     * Gets prefered_table_name
     * @return string
     */
    public function getPreferedTableName()
    {
        return $this->container['prefered_table_name'];
    }

    /**
     * Sets prefered_table_name
     * @param string $prefered_table_name
     * @return $this
     */
    public function setPreferedTableName($prefered_table_name)
    {
        $this->container['prefered_table_name'] = $prefered_table_name;

        return $this;
    }

    /**
     * Gets seating_area_id
     * @return int
     */
    public function getSeatingAreaId()
    {
        return $this->container['seating_area_id'];
    }

    /**
     * Sets seating_area_id
     * @param int $seating_area_id
     * @return $this
     */
    public function setSeatingAreaId($seating_area_id)
    {
        $this->container['seating_area_id'] = $seating_area_id;

        return $this;
    }

    /**
     * Gets seating_area_name
     * @return string
     */
    public function getSeatingAreaName()
    {
        return $this->container['seating_area_name'];
    }

    /**
     * Sets seating_area_name
     * @param string $seating_area_name
     * @return $this
     */
    public function setSeatingAreaName($seating_area_name)
    {
        $this->container['seating_area_name'] = $seating_area_name;

        return $this;
    }

    /**
     * Gets size
     * @return int
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     * @param int $size
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


