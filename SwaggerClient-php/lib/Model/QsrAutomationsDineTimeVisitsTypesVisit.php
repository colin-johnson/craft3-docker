<?php
/**
 * QsrAutomationsDineTimeVisitsTypesVisit
 *
 * PHP version 5
 *
 * @category Class
 * @package  QsrAutomations\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * QSR Automations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace QsrAutomations\Api\Model;

use \ArrayAccess;

/**
 * QsrAutomationsDineTimeVisitsTypesVisit Class Doc Comment
 *
 * @category    Class
 * @package     QsrAutomations\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QsrAutomationsDineTimeVisitsTypesVisit implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'QsrAutomations.DineTime.Visits.Types.Visit';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'iid' => 'int',
        'last_update' => '\DateTime',
        'server_last_update' => '\DateTime',
        'guest_id' => 'string',
        'guest' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeGuestsTypesGuest',
        'type' => 'int',
        'status' => 'int',
        'size' => 'int',
        'seated_tables' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitSeatedTable[]',
        'preassigned_tables' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPreassignedTable[]',
        'quote' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeWebAheadTypesQuote',
        'creation_time' => '\DateTime',
        'estimated_arrival_time' => '\DateTime',
        'arrival_time' => '\DateTime',
        'paged_time' => '\DateTime',
        'seated_time' => '\DateTime',
        'completed_time' => '\DateTime',
        'canceled_time' => '\DateTime',
        'confirmation_number' => 'string',
        'seating_area_id' => 'string',
        'seating_area_name' => 'string',
        'notes' => 'string',
        'custom_values' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[]',
        'external_id' => 'string',
        'party_mix' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix',
        'notification_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'iid' => 'int32',
        'last_update' => 'date-time',
        'server_last_update' => 'date-time',
        'guest_id' => null,
        'guest' => null,
        'type' => 'int32',
        'status' => 'int32',
        'size' => 'int32',
        'seated_tables' => null,
        'preassigned_tables' => null,
        'quote' => null,
        'creation_time' => 'date-time',
        'estimated_arrival_time' => 'date-time',
        'arrival_time' => 'date-time',
        'paged_time' => 'date-time',
        'seated_time' => 'date-time',
        'completed_time' => 'date-time',
        'canceled_time' => 'date-time',
        'confirmation_number' => null,
        'seating_area_id' => null,
        'seating_area_name' => null,
        'notes' => null,
        'custom_values' => null,
        'external_id' => null,
        'party_mix' => null,
        'notification_type' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'ID',
        'iid' => 'IID',
        'last_update' => 'LastUpdate',
        'server_last_update' => 'ServerLastUpdate',
        'guest_id' => 'GuestID',
        'guest' => 'Guest',
        'type' => 'Type',
        'status' => 'Status',
        'size' => 'Size',
        'seated_tables' => 'SeatedTables',
        'preassigned_tables' => 'PreassignedTables',
        'quote' => 'Quote',
        'creation_time' => 'CreationTime',
        'estimated_arrival_time' => 'EstimatedArrivalTime',
        'arrival_time' => 'ArrivalTime',
        'paged_time' => 'PagedTime',
        'seated_time' => 'SeatedTime',
        'completed_time' => 'CompletedTime',
        'canceled_time' => 'CanceledTime',
        'confirmation_number' => 'ConfirmationNumber',
        'seating_area_id' => 'SeatingAreaID',
        'seating_area_name' => 'SeatingAreaName',
        'notes' => 'Notes',
        'custom_values' => 'CustomValues',
        'external_id' => 'ExternalID',
        'party_mix' => 'PartyMix',
        'notification_type' => 'NotificationType'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'iid' => 'setIid',
        'last_update' => 'setLastUpdate',
        'server_last_update' => 'setServerLastUpdate',
        'guest_id' => 'setGuestId',
        'guest' => 'setGuest',
        'type' => 'setType',
        'status' => 'setStatus',
        'size' => 'setSize',
        'seated_tables' => 'setSeatedTables',
        'preassigned_tables' => 'setPreassignedTables',
        'quote' => 'setQuote',
        'creation_time' => 'setCreationTime',
        'estimated_arrival_time' => 'setEstimatedArrivalTime',
        'arrival_time' => 'setArrivalTime',
        'paged_time' => 'setPagedTime',
        'seated_time' => 'setSeatedTime',
        'completed_time' => 'setCompletedTime',
        'canceled_time' => 'setCanceledTime',
        'confirmation_number' => 'setConfirmationNumber',
        'seating_area_id' => 'setSeatingAreaId',
        'seating_area_name' => 'setSeatingAreaName',
        'notes' => 'setNotes',
        'custom_values' => 'setCustomValues',
        'external_id' => 'setExternalId',
        'party_mix' => 'setPartyMix',
        'notification_type' => 'setNotificationType'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'iid' => 'getIid',
        'last_update' => 'getLastUpdate',
        'server_last_update' => 'getServerLastUpdate',
        'guest_id' => 'getGuestId',
        'guest' => 'getGuest',
        'type' => 'getType',
        'status' => 'getStatus',
        'size' => 'getSize',
        'seated_tables' => 'getSeatedTables',
        'preassigned_tables' => 'getPreassignedTables',
        'quote' => 'getQuote',
        'creation_time' => 'getCreationTime',
        'estimated_arrival_time' => 'getEstimatedArrivalTime',
        'arrival_time' => 'getArrivalTime',
        'paged_time' => 'getPagedTime',
        'seated_time' => 'getSeatedTime',
        'completed_time' => 'getCompletedTime',
        'canceled_time' => 'getCanceledTime',
        'confirmation_number' => 'getConfirmationNumber',
        'seating_area_id' => 'getSeatingAreaId',
        'seating_area_name' => 'getSeatingAreaName',
        'notes' => 'getNotes',
        'custom_values' => 'getCustomValues',
        'external_id' => 'getExternalId',
        'party_mix' => 'getPartyMix',
        'notification_type' => 'getNotificationType'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const TYPE_0 = 0;
    const TYPE_1 = 1;
    const TYPE_2 = 2;
    const TYPE_3 = 3;
    const STATUS_0 = 0;
    const STATUS_1 = 1;
    const STATUS_2 = 2;
    const STATUS_3 = 3;
    const STATUS_4 = 4;
    const STATUS_5 = 5;
    const STATUS_6 = 6;
    const STATUS_7 = 7;
    const STATUS_8 = 8;
    const STATUS_9 = 9;
    const STATUS_10 = 10;
    const STATUS_11 = 11;
    const STATUS_12 = 12;
    const STATUS_13 = 13;
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getTypeAllowableValues()
    {
        return [
            self::TYPE_0,
            self::TYPE_1,
            self::TYPE_2,
            self::TYPE_3,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_0,
            self::STATUS_1,
            self::STATUS_2,
            self::STATUS_3,
            self::STATUS_4,
            self::STATUS_5,
            self::STATUS_6,
            self::STATUS_7,
            self::STATUS_8,
            self::STATUS_9,
            self::STATUS_10,
            self::STATUS_11,
            self::STATUS_12,
            self::STATUS_13,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['iid'] = isset($data['iid']) ? $data['iid'] : null;
        $this->container['last_update'] = isset($data['last_update']) ? $data['last_update'] : null;
        $this->container['server_last_update'] = isset($data['server_last_update']) ? $data['server_last_update'] : null;
        $this->container['guest_id'] = isset($data['guest_id']) ? $data['guest_id'] : null;
        $this->container['guest'] = isset($data['guest']) ? $data['guest'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
        $this->container['seated_tables'] = isset($data['seated_tables']) ? $data['seated_tables'] : null;
        $this->container['preassigned_tables'] = isset($data['preassigned_tables']) ? $data['preassigned_tables'] : null;
        $this->container['quote'] = isset($data['quote']) ? $data['quote'] : null;
        $this->container['creation_time'] = isset($data['creation_time']) ? $data['creation_time'] : null;
        $this->container['estimated_arrival_time'] = isset($data['estimated_arrival_time']) ? $data['estimated_arrival_time'] : null;
        $this->container['arrival_time'] = isset($data['arrival_time']) ? $data['arrival_time'] : null;
        $this->container['paged_time'] = isset($data['paged_time']) ? $data['paged_time'] : null;
        $this->container['seated_time'] = isset($data['seated_time']) ? $data['seated_time'] : null;
        $this->container['completed_time'] = isset($data['completed_time']) ? $data['completed_time'] : null;
        $this->container['canceled_time'] = isset($data['canceled_time']) ? $data['canceled_time'] : null;
        $this->container['confirmation_number'] = isset($data['confirmation_number']) ? $data['confirmation_number'] : null;
        $this->container['seating_area_id'] = isset($data['seating_area_id']) ? $data['seating_area_id'] : null;
        $this->container['seating_area_name'] = isset($data['seating_area_name']) ? $data['seating_area_name'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['custom_values'] = isset($data['custom_values']) ? $data['custom_values'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['party_mix'] = isset($data['party_mix']) ? $data['party_mix'] : null;
        $this->container['notification_type'] = isset($data['notification_type']) ? $data['notification_type'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        $allowed_values = $this->getTypeAllowableValues();
        if (!in_array($this->container['type'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'type', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        $allowed_values = $this->getStatusAllowableValues();
        if (!in_array($this->container['status'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'status', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        $allowed_values = $this->getTypeAllowableValues();
        if (!in_array($this->container['type'], $allowed_values)) {
            return false;
        }
        $allowed_values = $this->getStatusAllowableValues();
        if (!in_array($this->container['status'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param string $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets iid
     * @return int
     */
    public function getIid()
    {
        return $this->container['iid'];
    }

    /**
     * Sets iid
     * @param int $iid
     * @return $this
     */
    public function setIid($iid)
    {
        $this->container['iid'] = $iid;

        return $this;
    }

    /**
     * Gets last_update
     * @return \DateTime
     */
    public function getLastUpdate()
    {
        return $this->container['last_update'];
    }

    /**
     * Sets last_update
     * @param \DateTime $last_update
     * @return $this
     */
    public function setLastUpdate($last_update)
    {
        $this->container['last_update'] = $last_update;

        return $this;
    }

    /**
     * Gets server_last_update
     * @return \DateTime
     */
    public function getServerLastUpdate()
    {
        return $this->container['server_last_update'];
    }

    /**
     * Sets server_last_update
     * @param \DateTime $server_last_update
     * @return $this
     */
    public function setServerLastUpdate($server_last_update)
    {
        $this->container['server_last_update'] = $server_last_update;

        return $this;
    }

    /**
     * Gets guest_id
     * @return string
     */
    public function getGuestId()
    {
        return $this->container['guest_id'];
    }

    /**
     * Sets guest_id
     * @param string $guest_id
     * @return $this
     */
    public function setGuestId($guest_id)
    {
        $this->container['guest_id'] = $guest_id;

        return $this;
    }

    /**
     * Gets guest
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeGuestsTypesGuest
     */
    public function getGuest()
    {
        return $this->container['guest'];
    }

    /**
     * Sets guest
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeGuestsTypesGuest $guest
     * @return $this
     */
    public function setGuest($guest)
    {
        $this->container['guest'] = $guest;

        return $this;
    }

    /**
     * Gets type
     * @return int
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     * @param int $type
     * @return $this
     */
    public function setType($type)
    {
        $allowed_values = $this->getTypeAllowableValues();
        if (!is_null($type) && !in_array($type, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'type', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets status
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param int $status
     * @return $this
     */
    public function setStatus($status)
    {
        $allowed_values = $this->getStatusAllowableValues();
        if (!is_null($status) && !in_array($status, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'status', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets size
     * @return int
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     * @param int $size
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets seated_tables
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitSeatedTable[]
     */
    public function getSeatedTables()
    {
        return $this->container['seated_tables'];
    }

    /**
     * Sets seated_tables
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitSeatedTable[] $seated_tables
     * @return $this
     */
    public function setSeatedTables($seated_tables)
    {
        $this->container['seated_tables'] = $seated_tables;

        return $this;
    }

    /**
     * Gets preassigned_tables
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPreassignedTable[]
     */
    public function getPreassignedTables()
    {
        return $this->container['preassigned_tables'];
    }

    /**
     * Sets preassigned_tables
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPreassignedTable[] $preassigned_tables
     * @return $this
     */
    public function setPreassignedTables($preassigned_tables)
    {
        $this->container['preassigned_tables'] = $preassigned_tables;

        return $this;
    }

    /**
     * Gets quote
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeWebAheadTypesQuote
     */
    public function getQuote()
    {
        return $this->container['quote'];
    }

    /**
     * Sets quote
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeWebAheadTypesQuote $quote
     * @return $this
     */
    public function setQuote($quote)
    {
        $this->container['quote'] = $quote;

        return $this;
    }

    /**
     * Gets creation_time
     * @return \DateTime
     */
    public function getCreationTime()
    {
        return $this->container['creation_time'];
    }

    /**
     * Sets creation_time
     * @param \DateTime $creation_time
     * @return $this
     */
    public function setCreationTime($creation_time)
    {
        $this->container['creation_time'] = $creation_time;

        return $this;
    }

    /**
     * Gets estimated_arrival_time
     * @return \DateTime
     */
    public function getEstimatedArrivalTime()
    {
        return $this->container['estimated_arrival_time'];
    }

    /**
     * Sets estimated_arrival_time
     * @param \DateTime $estimated_arrival_time
     * @return $this
     */
    public function setEstimatedArrivalTime($estimated_arrival_time)
    {
        $this->container['estimated_arrival_time'] = $estimated_arrival_time;

        return $this;
    }

    /**
     * Gets arrival_time
     * @return \DateTime
     */
    public function getArrivalTime()
    {
        return $this->container['arrival_time'];
    }

    /**
     * Sets arrival_time
     * @param \DateTime $arrival_time
     * @return $this
     */
    public function setArrivalTime($arrival_time)
    {
        $this->container['arrival_time'] = $arrival_time;

        return $this;
    }

    /**
     * Gets paged_time
     * @return \DateTime
     */
    public function getPagedTime()
    {
        return $this->container['paged_time'];
    }

    /**
     * Sets paged_time
     * @param \DateTime $paged_time
     * @return $this
     */
    public function setPagedTime($paged_time)
    {
        $this->container['paged_time'] = $paged_time;

        return $this;
    }

    /**
     * Gets seated_time
     * @return \DateTime
     */
    public function getSeatedTime()
    {
        return $this->container['seated_time'];
    }

    /**
     * Sets seated_time
     * @param \DateTime $seated_time
     * @return $this
     */
    public function setSeatedTime($seated_time)
    {
        $this->container['seated_time'] = $seated_time;

        return $this;
    }

    /**
     * Gets completed_time
     * @return \DateTime
     */
    public function getCompletedTime()
    {
        return $this->container['completed_time'];
    }

    /**
     * Sets completed_time
     * @param \DateTime $completed_time
     * @return $this
     */
    public function setCompletedTime($completed_time)
    {
        $this->container['completed_time'] = $completed_time;

        return $this;
    }

    /**
     * Gets canceled_time
     * @return \DateTime
     */
    public function getCanceledTime()
    {
        return $this->container['canceled_time'];
    }

    /**
     * Sets canceled_time
     * @param \DateTime $canceled_time
     * @return $this
     */
    public function setCanceledTime($canceled_time)
    {
        $this->container['canceled_time'] = $canceled_time;

        return $this;
    }

    /**
     * Gets confirmation_number
     * @return string
     */
    public function getConfirmationNumber()
    {
        return $this->container['confirmation_number'];
    }

    /**
     * Sets confirmation_number
     * @param string $confirmation_number
     * @return $this
     */
    public function setConfirmationNumber($confirmation_number)
    {
        $this->container['confirmation_number'] = $confirmation_number;

        return $this;
    }

    /**
     * Gets seating_area_id
     * @return string
     */
    public function getSeatingAreaId()
    {
        return $this->container['seating_area_id'];
    }

    /**
     * Sets seating_area_id
     * @param string $seating_area_id
     * @return $this
     */
    public function setSeatingAreaId($seating_area_id)
    {
        $this->container['seating_area_id'] = $seating_area_id;

        return $this;
    }

    /**
     * Gets seating_area_name
     * @return string
     */
    public function getSeatingAreaName()
    {
        return $this->container['seating_area_name'];
    }

    /**
     * Sets seating_area_name
     * @param string $seating_area_name
     * @return $this
     */
    public function setSeatingAreaName($seating_area_name)
    {
        $this->container['seating_area_name'] = $seating_area_name;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets custom_values
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[]
     */
    public function getCustomValues()
    {
        return $this->container['custom_values'];
    }

    /**
     * Sets custom_values
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitCustomValue[] $custom_values
     * @return $this
     */
    public function setCustomValues($custom_values)
    {
        $this->container['custom_values'] = $custom_values;

        return $this;
    }

    /**
     * Gets external_id
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     * @param string $external_id
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets party_mix
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix
     */
    public function getPartyMix()
    {
        return $this->container['party_mix'];
    }

    /**
     * Sets party_mix
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeVisitsTypesVisitPartyMix $party_mix
     * @return $this
     */
    public function setPartyMix($party_mix)
    {
        $this->container['party_mix'] = $party_mix;

        return $this;
    }

    /**
     * Gets notification_type
     * @return string
     */
    public function getNotificationType()
    {
        return $this->container['notification_type'];
    }

    /**
     * Sets notification_type
     * @param string $notification_type
     * @return $this
     */
    public function setNotificationType($notification_type)
    {
        $this->container['notification_type'] = $notification_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


