<?php
/**
 * QsrAutomationsDineTimeReservationsCommandsPatchReservationCommand
 *
 * PHP version 5
 *
 * @category Class
 * @package  QsrAutomations\Api
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * QSR Automations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace QsrAutomations\Api\Model;

use \ArrayAccess;

/**
 * QsrAutomationsDineTimeReservationsCommandsPatchReservationCommand Class Doc Comment
 *
 * @category    Class
 * @package     QsrAutomations\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QsrAutomationsDineTimeReservationsCommandsPatchReservationCommand implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'QsrAutomations.DineTime.Reservations.Commands.PatchReservationCommand';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'party_size' => 'int',
        'estimated_arrival_time' => '\DateTime',
        'custom_values' => '\QsrAutomations\Api\Model\QsrAutomationsDineTimeContractsVisitsTypesIVisitCustomValue[]',
        'notes' => 'string',
        'prefered_table_name' => 'string',
        'request_time' => '\DateTime',
        'seating_area_id' => 'int',
        'seating_area_name' => 'string',
        'site_identifier' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'party_size' => 'int32',
        'estimated_arrival_time' => 'date-time',
        'custom_values' => null,
        'notes' => null,
        'prefered_table_name' => null,
        'request_time' => 'date-time',
        'seating_area_id' => 'int32',
        'seating_area_name' => null,
        'site_identifier' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'party_size' => 'PartySize',
        'estimated_arrival_time' => 'EstimatedArrivalTime',
        'custom_values' => 'CustomValues',
        'notes' => 'Notes',
        'prefered_table_name' => 'PreferedTableName',
        'request_time' => 'RequestTime',
        'seating_area_id' => 'SeatingAreaId',
        'seating_area_name' => 'SeatingAreaName',
        'site_identifier' => 'SiteIdentifier'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'party_size' => 'setPartySize',
        'estimated_arrival_time' => 'setEstimatedArrivalTime',
        'custom_values' => 'setCustomValues',
        'notes' => 'setNotes',
        'prefered_table_name' => 'setPreferedTableName',
        'request_time' => 'setRequestTime',
        'seating_area_id' => 'setSeatingAreaId',
        'seating_area_name' => 'setSeatingAreaName',
        'site_identifier' => 'setSiteIdentifier'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'party_size' => 'getPartySize',
        'estimated_arrival_time' => 'getEstimatedArrivalTime',
        'custom_values' => 'getCustomValues',
        'notes' => 'getNotes',
        'prefered_table_name' => 'getPreferedTableName',
        'request_time' => 'getRequestTime',
        'seating_area_id' => 'getSeatingAreaId',
        'seating_area_name' => 'getSeatingAreaName',
        'site_identifier' => 'getSiteIdentifier'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['party_size'] = isset($data['party_size']) ? $data['party_size'] : null;
        $this->container['estimated_arrival_time'] = isset($data['estimated_arrival_time']) ? $data['estimated_arrival_time'] : null;
        $this->container['custom_values'] = isset($data['custom_values']) ? $data['custom_values'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['prefered_table_name'] = isset($data['prefered_table_name']) ? $data['prefered_table_name'] : null;
        $this->container['request_time'] = isset($data['request_time']) ? $data['request_time'] : null;
        $this->container['seating_area_id'] = isset($data['seating_area_id']) ? $data['seating_area_id'] : null;
        $this->container['seating_area_name'] = isset($data['seating_area_name']) ? $data['seating_area_name'] : null;
        $this->container['site_identifier'] = isset($data['site_identifier']) ? $data['site_identifier'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets party_size
     * @return int
     */
    public function getPartySize()
    {
        return $this->container['party_size'];
    }

    /**
     * Sets party_size
     * @param int $party_size
     * @return $this
     */
    public function setPartySize($party_size)
    {
        $this->container['party_size'] = $party_size;

        return $this;
    }

    /**
     * Gets estimated_arrival_time
     * @return \DateTime
     */
    public function getEstimatedArrivalTime()
    {
        return $this->container['estimated_arrival_time'];
    }

    /**
     * Sets estimated_arrival_time
     * @param \DateTime $estimated_arrival_time
     * @return $this
     */
    public function setEstimatedArrivalTime($estimated_arrival_time)
    {
        $this->container['estimated_arrival_time'] = $estimated_arrival_time;

        return $this;
    }

    /**
     * Gets custom_values
     * @return \QsrAutomations\Api\Model\QsrAutomationsDineTimeContractsVisitsTypesIVisitCustomValue[]
     */
    public function getCustomValues()
    {
        return $this->container['custom_values'];
    }

    /**
     * Sets custom_values
     * @param \QsrAutomations\Api\Model\QsrAutomationsDineTimeContractsVisitsTypesIVisitCustomValue[] $custom_values
     * @return $this
     */
    public function setCustomValues($custom_values)
    {
        $this->container['custom_values'] = $custom_values;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets prefered_table_name
     * @return string
     */
    public function getPreferedTableName()
    {
        return $this->container['prefered_table_name'];
    }

    /**
     * Sets prefered_table_name
     * @param string $prefered_table_name
     * @return $this
     */
    public function setPreferedTableName($prefered_table_name)
    {
        $this->container['prefered_table_name'] = $prefered_table_name;

        return $this;
    }

    /**
     * Gets request_time
     * @return \DateTime
     */
    public function getRequestTime()
    {
        return $this->container['request_time'];
    }

    /**
     * Sets request_time
     * @param \DateTime $request_time
     * @return $this
     */
    public function setRequestTime($request_time)
    {
        $this->container['request_time'] = $request_time;

        return $this;
    }

    /**
     * Gets seating_area_id
     * @return int
     */
    public function getSeatingAreaId()
    {
        return $this->container['seating_area_id'];
    }

    /**
     * Sets seating_area_id
     * @param int $seating_area_id
     * @return $this
     */
    public function setSeatingAreaId($seating_area_id)
    {
        $this->container['seating_area_id'] = $seating_area_id;

        return $this;
    }

    /**
     * Gets seating_area_name
     * @return string
     */
    public function getSeatingAreaName()
    {
        return $this->container['seating_area_name'];
    }

    /**
     * Sets seating_area_name
     * @param string $seating_area_name
     * @return $this
     */
    public function setSeatingAreaName($seating_area_name)
    {
        $this->container['seating_area_name'] = $seating_area_name;

        return $this;
    }

    /**
     * Gets site_identifier
     * @return string
     */
    public function getSiteIdentifier()
    {
        return $this->container['site_identifier'];
    }

    /**
     * Sets site_identifier
     * @param string $site_identifier
     * @return $this
     */
    public function setSiteIdentifier($site_identifier)
    {
        $this->container['site_identifier'] = $site_identifier;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\QsrAutomations\Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


